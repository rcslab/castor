
import os

Import('env')

perfbench_deps = [ ]

def NoRR(fl):
    return filter(lambda f: not os.path.basename(f.rstr()).startswith("rr_"), fl)

for t in NoRR(Glob('#build/perf/*.c')):
    d = env.Program(t,
                    LINKFLAGS = ["-static", "-pthread"],
                    LIBPATH = ["${BUILDROOT}/../build/lib/Common"],
                    LIBS = ["CastorCommon", "c", "thr", "elf", "execinfo"])
    Depends(t, "CastorCommon")
    perfbench_deps.append(d)

for t in Glob('#build/perf/rr_*.c'):
    d = env.Program(t,
                    LIBPATH = ["${BUILDROOT}/../build/lib/Runtime",
                               "${BUILDROOT}/../build/lib/ThreadRuntime"],
                    LIBS = ["CastorRuntime", "c", "thr", "CastorThreadRuntime", "execinfo"])
    perfbench_deps.append(d)

AlwaysBuild(Alias('perfbench', perfbench_deps, "perf/perfbench.py"))


